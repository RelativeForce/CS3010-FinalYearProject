module Test.Parse.MapSum( 
    mapSumTests
) where

import Prelude

import Test.Unit (TestSuite, suite, test)
import Test.Unit.Assert (equal)
import Emo8.Parse (RawMap(..))

mapSumTests :: TestSuite
mapSumTests =
    suite "Parse - mapSum" do
        test "map" do
            equal mapSum $ mapA <> mapB

mapA :: RawMap
mapA = RawMap """
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆš
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆš
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆµğŸˆµğŸˆµğŸˆµğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
"""

mapB :: RawMap
mapB = RawMap """
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆšğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆšğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆµğŸˆµğŸˆµğŸˆµ
"""

mapSum :: RawMap
mapSum = RawMap """
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆš
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆš
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆµğŸˆµğŸˆµğŸˆµğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆšğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆšğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³
ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆ³ğŸˆµğŸˆµğŸˆµğŸˆµ
"""
